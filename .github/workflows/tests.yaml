name: Tests

on:
  push:
    branches: [main, test/ci]
    paths-ignore:
      - 'docs/**'
      - 'templates/**'
      - 'assets/**'
      - '**.md'
      - 'LICENSE'
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths-ignore:
      - 'docs/**'
      - 'templates/**'
      - 'assets/**'
      - '**.md'
      - 'LICENSE'

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
jobs:
  build:
    name: Build @nhost packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-dependencies
      - name: Build packages
        # * Build all Nhost packages as they are all supposed to be tested.
        # * They will be reused through the Turborepo cache
        run: pnpm build
      - name: List examples with a ci script
        # * List packagesthat has a `ci` script, except the root, and return their name and path
        id: set-matrix
        run: |
          PACKAGES=$(pnpm recursive list --depth -1 --parseable --filter=!nhost-root \
            | xargs -I@ jq "if (.scripts.ci | length) != 0  then {name: .name, path: \"@\"} else null end" @/package.json \
            | awk "!/null/" \
            | jq -c --slurp)
          echo "::set-output name=matrix::$PACKAGES"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  e2e:
    name: 'e2e: ${{ matrix.package.name }}'
    needs: build
    strategy:
      fail-fast: false # don't cancel other matrices when one fails
      matrix:
        package: ${{ fromJson(needs.build.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Nhost CLI
        # * Detect if the Nhost CLI should be installed
        if: hashFiles(format('{0}/nhost/config.yaml', matrix.package.path)) != ''
        run: curl -L https://raw.githubusercontent.com/nhost/cli/main/get.sh | bash
      - uses: ./.github/actions/install-dependencies
      - name: Run e2e test
        run: pnpm run ci -- --filter="${{ matrix.package.name }}"
      - name: Upload Cypress videos and screenshots
        if: ${{ failure() && hashFiles(format('{0}/cypress/screenshots/**', matrix.package.path), format('{0}/cypress/screenshots/**', matrix.package.path)) != ''}}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-${{ matrix.package.name }}
          path: |
            ${{format('{0}/cypress/screenshots/**', matrix.package.path)}}
            ${{format('{0}/cypress/videos/**', matrix.package.path)}}
  unit:
    name: Unit tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-dependencies
      - name: Run unit tests
        run: pnpm run test
  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-dependencies
      - name: Lint
        run: pnpm run lint
